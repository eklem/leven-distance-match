{"version":3,"sources":["webpack://lvm/./index.js","webpack://lvm/./node_modules/leven/index.js","webpack://lvm/webpack/bootstrap","webpack://lvm/webpack/startup"],"names":["leven","defaultProperties","distance","module","exports","levenMatch","query","index","properties","Array","isArray","map","queryWord","filter","indexWord","console","log","array","charCodeCache","left","right","swap","length","leftLength","rightLength","charCodeAt","bCharCode","result","temp","temp2","start","i","j","default","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"sCAAA,MAAMA,EAAQ,EAAQ,KAChBC,EAAoB,CAAEC,SAAU,GAgBtCC,EAAOC,QAAU,CACfC,WAfiB,SAAUC,EAAOC,EAAOC,GAKzC,GAJAA,EAAa,IACRP,KACAO,GAEAC,MAAMC,QAAQJ,IAAWG,MAAMC,QAAQH,GAK1C,OADqBD,EAAMK,KAAIC,GAAaL,EAAMM,QAAOC,GAAad,EAAMc,EAAWF,IAAcJ,EAAWN,aAHhHa,QAAQC,IAAI,yC,qBCRhB,MAAMC,EAAQ,GACRC,EAAgB,GAEhBlB,EAAQ,CAACmB,EAAMC,KACpB,GAAID,IAASC,EACZ,OAAO,EAGR,MAAMC,EAAOF,EAITA,EAAKG,OAASF,EAAME,SACvBH,EAAOC,EACPA,EAAQC,GAGT,IAAIE,EAAaJ,EAAKG,OAClBE,EAAcJ,EAAME,OAMxB,KAAOC,EAAa,GAAMJ,EAAKM,aAAaF,KAAgBH,EAAMK,aAAaD,IAC9ED,IACAC,IAMD,IAaIE,EACAC,EACAC,EACAC,EAhBAC,EAAQ,EAEZ,KAAOA,EAAQP,GAAeJ,EAAKM,WAAWK,KAAWV,EAAMK,WAAWK,IACzEA,IAMD,GAHAP,GAAcO,EACdN,GAAeM,EAEI,IAAfP,EACH,OAAOC,EAOR,IAAIO,EAAI,EACJC,EAAI,EAER,KAAOD,EAAIR,GACVL,EAAca,GAAKZ,EAAKM,WAAWK,EAAQC,GAC3Cd,EAAMc,KAAOA,EAGd,KAAOC,EAAIR,GAKV,IAJAE,EAAYN,EAAMK,WAAWK,EAAQE,GACrCJ,EAAOI,IACPL,EAASK,EAEJD,EAAI,EAAGA,EAAIR,EAAYQ,IAC3BF,EAAQH,IAAcR,EAAca,GAAKH,EAAOA,EAAO,EACvDA,EAAOX,EAAMc,GAEbJ,EAASV,EAAMc,GAAKH,EAAOD,EAASE,EAAQF,EAASA,EAAS,EAAIE,EAAQA,EAAQD,EAAOA,EAAO,EAAIC,EAItG,OAAOF,GAGRxB,EAAOC,QAAUJ,EAEjBG,EAAOC,QAAQ6B,QAAUjC,IC3ErBkC,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUhC,QAG3C,IAAID,EAAS+B,EAAyBE,GAAY,CAGjDhC,QAAS,IAOV,OAHAiC,EAAoBD,GAAUjC,EAAQA,EAAOC,QAAS+B,GAG/ChC,EAAOC,QCjBR+B,CAAoB,K","file":"leven-match.js","sourcesContent":["const leven = require('leven')\nconst defaultProperties = { distance: 1 }\n\nconst levenMatch = function (query, index, properties) {\n  properties = {\n    ...defaultProperties,\n    ...properties\n  }\n  if (!Array.isArray(query) || !Array.isArray(index)) {\n    console.log('query and index should be an array')\n  } else {\n    // .map all query words and .filter on levenshtein matches in all index words\n    const matchedQuery = query.map(queryWord => index.filter(indexWord => leven(indexWord, queryWord) <= properties.distance))\n    return matchedQuery\n  }\n}\n\nmodule.exports = {\n  levenMatch: levenMatch\n}\n","'use strict';\nconst array = [];\nconst charCodeCache = [];\n\nconst leven = (left, right) => {\n\tif (left === right) {\n\t\treturn 0;\n\t}\n\n\tconst swap = left;\n\n\t// Swapping the strings if `a` is longer than `b` so we know which one is the\n\t// shortest & which one is the longest\n\tif (left.length > right.length) {\n\t\tleft = right;\n\t\tright = swap;\n\t}\n\n\tlet leftLength = left.length;\n\tlet rightLength = right.length;\n\n\t// Performing suffix trimming:\n\t// We can linearly drop suffix common to both strings since they\n\t// don't increase distance at all\n\t// Note: `~-` is the bitwise way to perform a `- 1` operation\n\twhile (leftLength > 0 && (left.charCodeAt(~-leftLength) === right.charCodeAt(~-rightLength))) {\n\t\tleftLength--;\n\t\trightLength--;\n\t}\n\n\t// Performing prefix trimming\n\t// We can linearly drop prefix common to both strings since they\n\t// don't increase distance at all\n\tlet start = 0;\n\n\twhile (start < leftLength && (left.charCodeAt(start) === right.charCodeAt(start))) {\n\t\tstart++;\n\t}\n\n\tleftLength -= start;\n\trightLength -= start;\n\n\tif (leftLength === 0) {\n\t\treturn rightLength;\n\t}\n\n\tlet bCharCode;\n\tlet result;\n\tlet temp;\n\tlet temp2;\n\tlet i = 0;\n\tlet j = 0;\n\n\twhile (i < leftLength) {\n\t\tcharCodeCache[i] = left.charCodeAt(start + i);\n\t\tarray[i] = ++i;\n\t}\n\n\twhile (j < rightLength) {\n\t\tbCharCode = right.charCodeAt(start + j);\n\t\ttemp = j++;\n\t\tresult = j;\n\n\t\tfor (i = 0; i < leftLength; i++) {\n\t\t\ttemp2 = bCharCode === charCodeCache[i] ? temp : temp + 1;\n\t\t\ttemp = array[i];\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tresult = array[i] = temp > result ? temp2 > result ? result + 1 : temp2 : temp2 > temp ? temp + 1 : temp2;\n\t\t}\n\t}\n\n\treturn result;\n};\n\nmodule.exports = leven;\n// TODO: Remove this for the next major release\nmodule.exports.default = leven;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(10);\n"],"sourceRoot":""}